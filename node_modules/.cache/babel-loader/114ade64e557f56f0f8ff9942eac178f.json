{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { client } from '../../api/client';\nconst initialState = {\n  posts: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const response = await client.get('/fakeApi/posts');\n  return response.data;\n});\nexport const addNewPost = createAsyncThunk('posts/addNewPost', async initialPost => {\n  const response = await client.post('/fakeApi/posts', {\n    post: initialPost\n  });\n  return response.data;\n});\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    reactionAdded(state, action) {\n      const {\n        postId,\n        reaction\n      } = action.payload;\n      const existingPost = state.posts.find(post => post.id === postId);\n\n      if (existingPost) {\n        existingPost.reactions[reaction]++;\n      }\n    },\n\n    postUpdated: (state, action) => {\n      const {\n        id,\n        title,\n        content\n      } = action.payload;\n      const existingPost = state.posts.find(post => post.id = id);\n\n      if (existingPost) {\n        existingPost.title = title;\n        existingPost.content = content;\n      }\n    }\n  },\n  extraReducers: {\n    [fetchPosts.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.posts = state.posts.concat(action.payload);\n    },\n    [fetchPosts.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    },\n    [addNewPost.fulfilled]: (state, action) => {\n      state.posts.push(action.payload);\n    }\n  }\n});\nexport const {\n  reactionAdded,\n  postAdded,\n  postUpdated\n} = postsSlice.actions;\nexport default postsSlice.reducer;\nexport const selectAllPosts = state => state.posts.posts;\nexport const selectPostById = (state, postId) => state.posts.posts.find(post => post.id === postId);","map":{"version":3,"names":["createAsyncThunk","createSlice","client","initialState","posts","status","error","fetchPosts","response","get","data","addNewPost","initialPost","post","postsSlice","name","reducers","reactionAdded","state","action","postId","reaction","payload","existingPost","find","id","reactions","postUpdated","title","content","extraReducers","pending","fulfilled","concat","rejected","message","push","postAdded","actions","reducer","selectAllPosts","selectPostById"],"sources":["/Users/ozge/Desktop/social-media-app/src/features/posts/postsSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { client } from '../../api/client'\n\nconst initialState = {\n  posts: [],\n  status: 'idle',\n  error: null,\n}\n\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const response = await client.get('/fakeApi/posts')\n  return response.data\n})\n\nexport const addNewPost = createAsyncThunk(\n  'posts/addNewPost',\n  async (initialPost) => {\n    const response = await client.post('/fakeApi/posts', { post: initialPost })\n    return response.data\n  }\n)\n\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    reactionAdded(state, action) {\n      const { postId, reaction } = action.payload\n      const existingPost = state.posts.find((post) => post.id === postId)\n      if (existingPost) {\n        existingPost.reactions[reaction]++\n      }\n    },\n    postUpdated: (state, action) => {\n      const { id, title, content } = action.payload\n      const existingPost = state.posts.find((post) => (post.id = id))\n      if (existingPost) {\n        existingPost.title = title\n        existingPost.content = content\n      }\n    },\n  },\n  extraReducers: {\n    [fetchPosts.pending]: (state, action) => {\n      state.status = 'loading'\n    },\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.status = 'succeeded'\n      state.posts = state.posts.concat(action.payload)\n    },\n    [fetchPosts.rejected]: (state, action) => {\n      state.status = 'failed'\n      state.error = action.error.message\n    },\n    [addNewPost.fulfilled]: (state, action) => {\n      state.posts.push(action.payload)\n    },\n  },\n})\n\nexport const { reactionAdded, postAdded, postUpdated } = postsSlice.actions\n\nexport default postsSlice.reducer\n\nexport const selectAllPosts = (state) => state.posts.posts\n\nexport const selectPostById = (state, postId) =>\n  state.posts.posts.find((post) => post.id === postId)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}