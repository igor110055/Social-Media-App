{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { client } from '../../api/client';\nexport const fetchNotifications = createAsyncThunk('notifications/fetchNotifications', async (_, _ref) => {\n  let {\n    getState\n  } = _ref;\n  const allNotifications = selectAllNotifications(getState());\n  const [latestNotification] = allNotifications;\n  const latestTimestamp = latestNotification ? latestNotification.date : '';\n  const response = await client.get(`/fakeApi/notifications?since=${latestTimestamp}`);\n  return response.data;\n});\nconst notificationsSlice = createSlice({\n  name: 'notifications',\n  initialState: [],\n  reducers: {\n    allNotificationsRead(state, action) {\n      state.forEach(notification => {\n        notification.read = true;\n      });\n    }\n\n  },\n  extraReducers: {\n    [fetchNotifications.fulfilled]: (state, action) => {\n      state.forEach(notification => {\n        notification.isNew = !notification.read;\n      });\n      state.push(...action.payload); // Sort with newest first\n\n      state.sort((a, b) => b.date.localeCompare(a.date));\n    }\n  }\n});\nexport default notificationsSlice.reducer;\nexport const {\n  allNotificationsRead\n} = notificationsSlice.actions;\nexport const selectAllNotifications = state => state.notifications;","map":{"version":3,"names":["createAsyncThunk","createSlice","client","fetchNotifications","_","getState","allNotifications","selectAllNotifications","latestNotification","latestTimestamp","date","response","get","data","notificationsSlice","name","initialState","reducers","allNotificationsRead","state","action","forEach","notification","read","extraReducers","fulfilled","isNew","push","payload","sort","a","b","localeCompare","reducer","actions","notifications"],"sources":["/Users/ozge/Desktop/social-media-app/src/features/notifications/notificationsSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { client } from '../../api/client'\n\nexport const fetchNotifications = createAsyncThunk(\n  'notifications/fetchNotifications',\n  async (_, { getState }) => {\n    const allNotifications = selectAllNotifications(getState())\n    const [latestNotification] = allNotifications\n    const latestTimestamp = latestNotification ? latestNotification.date : ''\n    const response = await client.get(\n      `/fakeApi/notifications?since=${latestTimestamp}`\n    )\n    return response.data\n  }\n)\n\nconst notificationsSlice = createSlice({\n  name: 'notifications',\n  initialState: [],\n  reducers: {\n    allNotificationsRead(state, action) {\n      state.forEach((notification) => {\n        notification.read = true\n      })\n    },\n  },\n  extraReducers: {\n    [fetchNotifications.fulfilled]: (state, action) => {\n      state.forEach((notification) => {\n        notification.isNew = !notification.read\n      })\n      state.push(...action.payload)\n      // Sort with newest first\n      state.sort((a, b) => b.date.localeCompare(a.date))\n    },\n  },\n})\n\nexport default notificationsSlice.reducer\n\nexport const { allNotificationsRead } = notificationsSlice.actions\n\nexport const selectAllNotifications = (state) => state.notifications\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,OAAO,MAAMC,kBAAkB,GAAGH,gBAAgB,CAChD,kCADgD,EAEhD,OAAOI,CAAP,WAA2B;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACzB,MAAMC,gBAAgB,GAAGC,sBAAsB,CAACF,QAAQ,EAAT,CAA/C;EACA,MAAM,CAACG,kBAAD,IAAuBF,gBAA7B;EACA,MAAMG,eAAe,GAAGD,kBAAkB,GAAGA,kBAAkB,CAACE,IAAtB,GAA6B,EAAvE;EACA,MAAMC,QAAQ,GAAG,MAAMT,MAAM,CAACU,GAAP,CACpB,gCAA+BH,eAAgB,EAD3B,CAAvB;EAGA,OAAOE,QAAQ,CAACE,IAAhB;AACD,CAV+C,CAA3C;AAaP,MAAMC,kBAAkB,GAAGb,WAAW,CAAC;EACrCc,IAAI,EAAE,eAD+B;EAErCC,YAAY,EAAE,EAFuB;EAGrCC,QAAQ,EAAE;IACRC,oBAAoB,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAClCD,KAAK,CAACE,OAAN,CAAeC,YAAD,IAAkB;QAC9BA,YAAY,CAACC,IAAb,GAAoB,IAApB;MACD,CAFD;IAGD;;EALO,CAH2B;EAUrCC,aAAa,EAAE;IACb,CAACrB,kBAAkB,CAACsB,SAApB,GAAgC,CAACN,KAAD,EAAQC,MAAR,KAAmB;MACjDD,KAAK,CAACE,OAAN,CAAeC,YAAD,IAAkB;QAC9BA,YAAY,CAACI,KAAb,GAAqB,CAACJ,YAAY,CAACC,IAAnC;MACD,CAFD;MAGAJ,KAAK,CAACQ,IAAN,CAAW,GAAGP,MAAM,CAACQ,OAArB,EAJiD,CAKjD;;MACAT,KAAK,CAACU,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACrB,IAAF,CAAOsB,aAAP,CAAqBF,CAAC,CAACpB,IAAvB,CAArB;IACD;EARY;AAVsB,CAAD,CAAtC;AAsBA,eAAeI,kBAAkB,CAACmB,OAAlC;AAEA,OAAO,MAAM;EAAEf;AAAF,IAA2BJ,kBAAkB,CAACoB,OAApD;AAEP,OAAO,MAAM3B,sBAAsB,GAAIY,KAAD,IAAWA,KAAK,CAACgB,aAAhD"},"metadata":{},"sourceType":"module"}