{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nimport { sub } from 'date-fns';\nconst initialState = [{\n  id: '1',\n  title: 'First Post!',\n  content: 'Hello!',\n  date: sub(new Date(), {\n    minutes: 10\n  }).toISOString()\n}, {\n  id: '2',\n  title: 'Second Post',\n  content: 'More text',\n  date: sub(new Date(), {\n    minutes: 5\n  }).toISOString()\n}];\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    reactiosnAdded: (state, action) => {\n      const {\n        postId,\n        reaction\n      } = action.payload;\n      const existingPost = state.find(post => post.id === postId);\n\n      if (existingPost) {\n        existingPost.reactions[reaction]++;\n      }\n    },\n    postAdded: {\n      reducer: (state, action) => {\n        state.push(action.payload);\n      },\n      prepare: (title, content, userId) => {\n        return {\n          payload: {\n            id: nanoid(),\n            title,\n            content,\n            user: userId,\n            date: new Date().toISOString(),\n            meta: 'Additional information',\n            error: false\n          }\n        };\n      }\n    },\n    postUpdated: (state, action) => {\n      const {\n        id,\n        title,\n        content\n      } = action.payload;\n      const existingPost = state.find(post => post.id = id);\n\n      if (existingPost) {\n        existingPost.title = title;\n        existingPost.content = content;\n      }\n    }\n  }\n});\nexport const {\n  postAdded,\n  postUpdated\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","sub","initialState","id","title","content","date","Date","minutes","toISOString","postsSlice","name","reducers","reactiosnAdded","state","action","postId","reaction","payload","existingPost","find","post","reactions","postAdded","reducer","push","prepare","userId","user","meta","error","postUpdated","actions"],"sources":["/Users/ozge/Desktop/social-media-app/src/features/posts/postsSlice.js"],"sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit'\nimport { sub } from 'date-fns'\n\nconst initialState = [\n  {\n    id: '1',\n    title: 'First Post!',\n    content: 'Hello!',\n    date: sub(new Date(), { minutes: 10 }).toISOString(),\n  },\n  {\n    id: '2',\n    title: 'Second Post',\n    content: 'More text',\n    date: sub(new Date(), { minutes: 5 }).toISOString(),\n  },\n]\n\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    reactiosnAdded: (state, action) => {\n      const { postId, reaction } = action.payload\n      const existingPost = state.find((post) => post.id === postId)\n      if (existingPost) {\n        existingPost.reactions[reaction]++\n      }\n    },\n    postAdded: {\n      reducer: (state, action) => {\n        state.push(action.payload)\n      },\n      prepare: (title, content, userId) => {\n        return {\n          payload: {\n            id: nanoid(),\n            title,\n            content,\n            user: userId,\n            date: new Date().toISOString(),\n            meta: 'Additional information',\n            error: false,\n          },\n        }\n      },\n    },\n    postUpdated: (state, action) => {\n      const { id, title, content } = action.payload\n      const existingPost = state.find((post) => (post.id = id))\n      if (existingPost) {\n        existingPost.title = title\n        existingPost.content = content\n      }\n    },\n  },\n})\n\nexport const { postAdded, postUpdated } = postsSlice.actions\n\nexport default postsSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,kBAApC;AACA,SAASC,GAAT,QAAoB,UAApB;AAEA,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,GADN;EAEEC,KAAK,EAAE,aAFT;EAGEC,OAAO,EAAE,QAHX;EAIEC,IAAI,EAAEL,GAAG,CAAC,IAAIM,IAAJ,EAAD,EAAa;IAAEC,OAAO,EAAE;EAAX,CAAb,CAAH,CAAiCC,WAAjC;AAJR,CADmB,EAOnB;EACEN,EAAE,EAAE,GADN;EAEEC,KAAK,EAAE,aAFT;EAGEC,OAAO,EAAE,WAHX;EAIEC,IAAI,EAAEL,GAAG,CAAC,IAAIM,IAAJ,EAAD,EAAa;IAAEC,OAAO,EAAE;EAAX,CAAb,CAAH,CAAgCC,WAAhC;AAJR,CAPmB,CAArB;AAeA,OAAO,MAAMC,UAAU,GAAGX,WAAW,CAAC;EACpCY,IAAI,EAAE,OAD8B;EAEpCT,YAFoC;EAGpCU,QAAQ,EAAE;IACRC,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACjC,MAAM;QAAEC,MAAF;QAAUC;MAAV,IAAuBF,MAAM,CAACG,OAApC;MACA,MAAMC,YAAY,GAAGL,KAAK,CAACM,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAAClB,EAAL,KAAYa,MAAjC,CAArB;;MACA,IAAIG,YAAJ,EAAkB;QAChBA,YAAY,CAACG,SAAb,CAAuBL,QAAvB;MACD;IACF,CAPO;IAQRM,SAAS,EAAE;MACTC,OAAO,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;QAC1BD,KAAK,CAACW,IAAN,CAAWV,MAAM,CAACG,OAAlB;MACD,CAHQ;MAITQ,OAAO,EAAE,CAACtB,KAAD,EAAQC,OAAR,EAAiBsB,MAAjB,KAA4B;QACnC,OAAO;UACLT,OAAO,EAAE;YACPf,EAAE,EAAEH,MAAM,EADH;YAEPI,KAFO;YAGPC,OAHO;YAIPuB,IAAI,EAAED,MAJC;YAKPrB,IAAI,EAAE,IAAIC,IAAJ,GAAWE,WAAX,EALC;YAMPoB,IAAI,EAAE,wBANC;YAOPC,KAAK,EAAE;UAPA;QADJ,CAAP;MAWD;IAhBQ,CARH;IA0BRC,WAAW,EAAE,CAACjB,KAAD,EAAQC,MAAR,KAAmB;MAC9B,MAAM;QAAEZ,EAAF;QAAMC,KAAN;QAAaC;MAAb,IAAyBU,MAAM,CAACG,OAAtC;MACA,MAAMC,YAAY,GAAGL,KAAK,CAACM,IAAN,CAAYC,IAAD,IAAWA,IAAI,CAAClB,EAAL,GAAUA,EAAhC,CAArB;;MACA,IAAIgB,YAAJ,EAAkB;QAChBA,YAAY,CAACf,KAAb,GAAqBA,KAArB;QACAe,YAAY,CAACd,OAAb,GAAuBA,OAAvB;MACD;IACF;EAjCO;AAH0B,CAAD,CAA9B;AAwCP,OAAO,MAAM;EAAEkB,SAAF;EAAaQ;AAAb,IAA6BrB,UAAU,CAACsB,OAA9C;AAEP,eAAetB,UAAU,CAACc,OAA1B"},"metadata":{},"sourceType":"module"}