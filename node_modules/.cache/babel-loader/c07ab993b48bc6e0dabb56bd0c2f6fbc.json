{"ast":null,"code":"var _jsxFileName = \"/Users/ozge/Desktop/social-media-app/src/features/posts/PostsLists.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { PostAuthor } from './PostAuthor';\nimport postsSlice, { selectAllPosts, fetchPosts } from './postsSlice';\nimport { ReactionButtons } from './ReactionButtons';\nimport { TimeAgo } from './TimeAgo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet PostExcerpt = _ref => {\n  let {\n    post\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"post-excerpt\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PostAuthor, {\n        userId: post.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeAgo, {\n        timestamp: post.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-content\",\n      children: post.content.substring(0, 100)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactionButtons, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/posts/${post.id}`,\n      className: \"button muted-button\",\n      children: \"View Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}; //to avoid unnecessary rendering.\n\n\n_c = PostExcerpt;\nPostExcerpt = /*#__PURE__*/React.memo(PostExcerpt);\nexport const PostsLists = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const posts = useSelector(selectAllPosts);\n  const postStatus = useSelector(state => state.posts.status);\n  const error = useSelector(state => state.posts.error);\n  useEffect(() => {\n    if (postStatus === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [postStatus, dispatch]);\n  let content;\n\n  if (postStatus === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }, this);\n  } else if (postStatus === 'succeeded') {\n    // Sort posts in reverse chronological order by datetime string\n    const orderedPosts = posts.slice().sort((a, b) => b.date.localeCompare(a.date));\n    content = orderedPosts.map(post => /*#__PURE__*/_jsxDEV(PostExcerpt, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this));\n  } else if (postStatus === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostsLists, \"WVsaUdjlRZdgFV51nhKfVUEst3c=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c2 = PostsLists;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostExcerpt\");\n$RefreshReg$(_c2, \"PostsLists\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Link","PostAuthor","postsSlice","selectAllPosts","fetchPosts","ReactionButtons","TimeAgo","PostExcerpt","post","title","user","date","content","substring","id","memo","PostsLists","dispatch","posts","postStatus","state","status","error","orderedPosts","slice","sort","a","b","localeCompare","map"],"sources":["/Users/ozge/Desktop/social-media-app/src/features/posts/PostsLists.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { PostAuthor } from './PostAuthor'\nimport postsSlice, { selectAllPosts, fetchPosts } from './postsSlice'\nimport { ReactionButtons } from './ReactionButtons'\nimport { TimeAgo } from './TimeAgo'\n\nlet PostExcerpt = ({ post }) => {\n  return (\n    <article className=\"post-excerpt\" key={post.id}>\n      <h3>{post.title}</h3>\n      <div>\n        <PostAuthor userId={post.user} />\n        <TimeAgo timestamp={post.date} />\n      </div>\n      <p className=\"post-content\">{post.content.substring(0, 100)}</p>\n\n      <ReactionButtons post={post} />\n      <Link to={`/posts/${post.id}`} className=\"button muted-button\">\n        View Post\n      </Link>\n    </article>\n  )\n}\n\n//to avoid unnecessary rendering.\nPostExcerpt = React.memo(PostExcerpt)\n\nexport const PostsLists = () => {\n  const dispatch = useDispatch()\n\n  const posts = useSelector(selectAllPosts)\n  const postStatus = useSelector((state) => state.posts.status)\n  const error = useSelector((state) => state.posts.error)\n\n  useEffect(() => {\n    if (postStatus === 'idle') {\n      dispatch(fetchPosts())\n    }\n  }, [postStatus, dispatch])\n\n  let content\n  if (postStatus === 'loading') {\n    content = <div className=\"loader\">Loading...</div>\n  } else if (postStatus === 'succeeded') {\n    // Sort posts in reverse chronological order by datetime string\n    const orderedPosts = posts\n      .slice()\n      .sort((a, b) => b.date.localeCompare(a.date))\n\n    content = orderedPosts.map((post) => (\n      <PostExcerpt key={post.id} post={post} />\n    ))\n  } else if (postStatus === 'failed') {\n    content = <div>{error}</div>\n  }\n\n  return (\n    <section className=\"posts-list\">\n      <h2>Posts</h2>\n      {content}\n    </section>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}